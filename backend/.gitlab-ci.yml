stages:
  - lint
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: '/certs'
  DOCKER_HOST: 'unix:///var/run/docker.sock'

services:
  - name: docker:24.0.5-dind
    alias: docker

lint:
  stage: lint
  image: node:23
  before_script:
    - curl -Ls https://cli.doppler.com/install.sh | sh
    - echo "DOPPLER_TOKEN=$DOPPLER_TOKEN"
    - doppler configure --token $DOPPLER_TOKEN --scope t-dev-702
    - doppler run --config dev -- npm ci
  script:
    - npm run lint
  only:
    - merge_requests
    - main
  tags:
    - docker

build:
  stage: build
  image: node:23
  before_script:
    - curl -Ls https://cli.doppler.com/install.sh | sh
    - echo "DOPPLER_TOKEN=$DOPPLER_TOKEN"
    - doppler configure --token $DOPPLER_TOKEN --scope t-dev-702
    - doppler run --config dev -- npm ci
  script:
    - doppler run -- npm run build
  artifacts:
    paths:
      - dist/
  tags:
    - docker

test:
  stage: test
  variables:
    POSTGRES_USER: $PG_USER
    POSTGRES_PASSWORD: $PG_PASSWORD
    POSTGRES_DB: $PG_DB
    DOCKER_HOST: 'unix:///runner/services/docker/docker.sock'
  services:
    - docker:24.0.5-dind
    - name: postgres:16
      alias: db
  image: docker:24.0.5
  before_script:
    - docker info
    - apk add --no-cache curl bash gnupg docker-compose
    - echo "Installation de Node.js et npm"
    - apk add --no-cache nodejs npm
    - echo "Installation de Doppler"
    - curl -Ls https://cli.doppler.com/install.sh | sh
    - doppler configure --token $DOPPLER_TOKEN --scope t-dev-702
    - echo "Démarrage de la base de données avec Docker Compose"
    - doppler run --config dev -- docker-compose up -d db
  script:
    - doppler run --config dev -- npm ci
    - doppler run --config dev -- npm run test:cov
  after_script:
    - docker-compose down -v
  only:
    - merge_requests
    - main
  tags:
    - docker
  # when: always

deploy:
  stage: deploy
  image: node:23
  before_script:
    - curl -sSL https://cli.doppler.com/install.sh | sh
    - doppler configure --token $DOPPLER_TOKEN --scope t-dev-702
  script:
    - doppler secrets download --no-file | while read -r line; do export $line; done
    - ansible-playbook -i ansible/inventory ansible/playbooks/deploy.yml --become --extra-vars "ansible_become_pass=$ANSIBLE_BECOME_PASS"
  when: manual
  allow_failure: true
  only:
    - main
