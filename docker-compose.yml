services:
  app:
    build:
      context: ./backend
      dockerfile: ${DOCKERFILE}
    container_name: nest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    volumes:
      - ${PWD}/backend:/app
      - /app/node_modules
      - ${PWD}/backend/logs:/app/logs
    restart: always

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./backend/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    privileged: true

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8085:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    privileged: true

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    environment:
      - discorvery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9800:9800"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    container_name: kibana
    environment:
      - ELASTICSAERCH_HOST=http://elasticsearch:9200
    ports:
      - "5601:5601"


networks:
  monitoring:
  elastic-net:
  default:
    driver: bridge

volumes:
  postgres_data:
  grafana_data:
  elasticsearch_data:
